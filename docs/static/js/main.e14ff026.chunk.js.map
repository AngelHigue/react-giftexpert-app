{"version":3,"sources":["Components/AddCategory.js","Components/GiftGridItem.js","helpers/GetGifts.js","GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","GiftGridItem","title","url","className","src","alt","getGifts","a","encodeURI","fetch","resp","json","data","gifts","map","img","id","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAY,SAACS,GAAD,OAAeP,GAAf,mBAA8BO,OAC1CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCLZ,SAASG,EAAT,GAAqC,IAAdC,EAAa,EAAbA,MAAOC,EAAM,EAANA,IACzC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,O,2BCNHK,EAAQ,uCAAG,WAAOX,GAAP,uBAAAY,EAAA,6DAChBL,EADgB,iDACgCM,UACpDb,GAFoB,+DAIHc,MAAMP,GAJH,cAIhBQ,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAXhB,kBAefW,GAfe,4CAAH,sDCIN,SAASM,EAAT,GAAiC,IAAbxB,EAAY,EAAZA,SAAY,ECAlB,SAACA,GAAc,IAAD,EACfR,mBAAS,CACjCyB,KAAM,GACNQ,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAgBzC,OATAC,qBAAU,WACRjB,EAASX,GAAU6B,MAAK,SAAAC,GAChBH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGpB,CAACzB,IAEG0B,EDf0BK,CAAc/B,GAAlCsB,EADgC,EACrCL,KAAaQ,EADwB,EACxBA,QAGrB,OACE,qCACE,6BAAKzB,IAEJyB,GAAW,mBAAGjB,UAAU,wCAAb,yBAHd,iBAKI,qBAAKA,UAAU,YAAf,SACGc,EAAOH,KAAI,SAACC,GACX,OAAO,cAACf,EAAD,eAA+Be,GAAZA,EAAIC,YEZnC,IAAMW,EAAgB,WAAO,IAAD,EACCxC,mBAAS,CAAC,gBADX,mBAC1ByC,EAD0B,KACd1C,EADc,KAGjC,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBAEA,6BACG0C,EAAWd,KAAI,SAACnB,GAAD,OACd,cAACwB,EAAD,CAAyBxB,SAAUA,GAApBA,YCVzBkC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.e14ff026.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategory((category) => [inputValue, ...category]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSumbit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategory: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react'\r\n\r\nexport default function GiftGridItem({title, url}) {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifts = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=p9gBfNMJMAQ97cVQvxEv6KKAoI3a0g49`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifts = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifts;\r\n};\r\n","import React from \"react\";\r\nimport GiftGridItem from \"./Components/GiftGridItem\";\r\nimport { useFetchGifts } from \"./hooks/useFetchGifts\";\r\n\r\nexport default function GiftGrid({ category }) {\r\n  const { data:images, loading } = useFetchGifts(category);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <p className=\"card animate__animated animate__flash\">Loading ...</p> }\r\n        \"Cargando ...\"\r\n        <div className=\"card-grid\">\r\n          {images.map((img) => {\r\n            return <GiftGridItem key={img.id} {...img} />;\r\n          })}\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/GetGifts\";\r\n\r\n\r\nexport const useFetchGifts = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  // Traer imagenes de Giphy\r\n  useEffect(() => {\r\n    getGifts(category).then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false  \r\n            })\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./Components/AddCategory\";\r\nimport GiftGrid from \"./GiftGrid\";\r\n\r\nexport const GiftExpertApp = () => {\r\n  const [categories, setCategory] = useState([\"Tokyo Ghoul\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory setCategory={setCategory} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GiftGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GiftExpertApp } from \"./GiftExpertApp\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}